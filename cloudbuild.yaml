steps:
  - id: "fetch-cache"
    name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args:
      - -c
      - |
        (
          set -e
          gsutil hash -h yarn.lock | grep md5 | tr -s " " | awk '{print $3}' > hashed.yarn-lock
          gsutil -m cp "gs://hoprd-cache/$(cat hashed.yarn-lock)" cache.tar.gz 2> /dev/null
          test -f cache.tar.gz
          tar -zxf cache.tar.gz
          echo "Using cache from: gs://hoprd-cache/$(cat hashed.yarn-lock)"
        ) || true

  - id: "install-yarn"
    name: node:16
    waitFor: ["fetch-cache"]
    entrypoint: sh
    args:
      - -c
      - |
        test -f cache.tar.gz || yarn install

  - id: "build"
    waitFor: ["install-yarn"]
    name: node:16
    entrypoint: yarn
    args: ["build"]

  - id: "cache"
    name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args:
      - -c
      - |
        (
          set -e
          test ! -f cache.tar.gz
          tar -zcf cache.tar.gz node_modules
          gsutil -m cp cache.tar.gz "gs://hoprd-cache/$(cat hashed.yarn-lock)"
        ) || true
    waitFor: ["build"]

  - id: "docker"
    name: gcr.io/cloud-builders/docker
    waitFor: ["build"]
    args:
      - "build"
      - "."
      - "--tag=gcr.io/$PROJECT_ID/hoprd:$_HOPR_IMAGE_VERSION"
      - "--build-arg=HOPRD_VERSION=$_HOPR_PACKAGE_VERSION"

options:
  logStreamingOption: STREAM_ON
  machineType: N1_HIGHCPU_8
timeout: 630s
images:
  - "gcr.io/$PROJECT_ID/hoprd"
