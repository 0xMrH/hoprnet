/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from 'bn.js'
import { Contract, ContractOptions } from 'web3-eth-contract'
import { EventLog } from 'web3-core'
import { EventEmitter } from 'events'
import { ContractEvent, Callback, TransactionObject, BlockType } from './types'

interface EventOptions {
  filter?: object
  fromBlock?: BlockType
  topics?: string[]
}

export class ERC677 extends Contract {
  constructor(jsonInterface: any[], address?: string, options?: ContractOptions)
  clone(): ERC677
  methods: {
    approve(_spender: string, _value: number | string): TransactionObject<boolean>

    totalSupply(): TransactionObject<string>

    transferFrom(_from: string, _to: string, _value: number | string): TransactionObject<boolean>

    increaseAllowance(spender: string, addedValue: number | string): TransactionObject<boolean>

    transferAndCall(arg0: string, arg1: number | string, arg2: string | number[]): TransactionObject<boolean>

    balanceOf(_who: string): TransactionObject<string>

    decreaseAllowance(spender: string, subtractedValue: number | string): TransactionObject<boolean>

    transfer(_to: string, _value: number | string): TransactionObject<boolean>

    allowance(_owner: string, _spender: string): TransactionObject<string>
  }
  events: {
    Transfer: ContractEvent<{
      from: string
      to: string
      value: string
      data: string
      0: string
      1: string
      2: string
      3: string
    }>
    Approval: ContractEvent<{
      owner: string
      spender: string
      value: string
      0: string
      1: string
      2: string
    }>
    allEvents: (options?: EventOptions, cb?: Callback<EventLog>) => EventEmitter
  }
}
