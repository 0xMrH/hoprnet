name: HOPR Test

on:
  push:
    branches: ['**']
    paths-ignore:
      - 'docs/**'

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12]
        package: ['utils', 'core', 'ethereum', 'all']

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn --prefer-offline
          node_modules/.bin/lerna bootstrap

      - name: Build (all)
        if: matrix.package == 'all' 
        run: |
          node_modules/.bin/lerna link 
          node_modules/.bin/lerna run build --include-dependencies --ignore @hoprnet/hopr-core --ignore @hoprnet/hopr-ethereum

      - name: Test (all)
        if: matrix.package == 'all'
        run: |
          node_modules/.bin/lerna run test --ignore @hoprnet/hopr-core --ignore @hoprnet/hopr-ethereum

      - name: Build ${{ matrix.package }}
        if: matrix.package != 'all'
        run: |
          node_modules/.bin/lerna run build --include-dependencies --scope @hoprnet/hopr-${{ matrix.package }}
      - name: Test ${{ matrix.package }}
        if: matrix.package != 'all' 
        run: |
          node_modules/.bin/lerna run test --scope @hoprnet/hopr-${{ matrix.package }}

      ## TODO: TEST
      - name: Get version from package.json
        run: echo "PREVIOUS_RELEASE=$(node -p -e "require('./packages/hoprd/package.json').version")" >> $GITHUB_ENV

      # Goal is, every push to master increments c from a.b.0-prerelease-c to
      # a.b.0-prerelease-(c+1)
      # Of course this begs the question, how do we ever increment b?
      # If there is a released branch with a.b.c, then we know we also have to
      # increment b.
      - name: Is there a published version of this?
        run: |
          PREVIOUS_RELEASE_MAJ_MIN=$(echo ${{ env.PREVIOUS_RELEASE }} | sed 's/\(\.[0-9]*\-alpha\)*\.[0-9]*$//')
          FIND_NPM=$(npm view @hoprnet/hopr-core@$PREVIOUS_RELEASE_MAJ_MIN --json)
          # preminor Goes a.b.0-next.0 to a.(b+1).0-next.0
          # prerelease Goes a.b.0-next.c to a.b.0-next.(c+1)
          VERSION_TYPE=$([ ${#FIND_NPM} -ge 1 ] && echo "preminor" || echo "prerelease")
          echo "VERSION_TYPE=${VERSION_TYPE}" >> $GITHUB_ENV
          echo "RELEASE TYPE: ${VERSION_TYPE} (${PREVIOUS_RELEASE_MAJ_MIN})"
