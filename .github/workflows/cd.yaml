name: 'Continous Deployment'

on:
  push:
    branches:
      - cd/**

jobs:
  cd:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2

      - name: Get version from package.json
        run: echo "RELEASE_VERSION=$(node -p -e "require('./packages/hoprd/package.json').version")" >> $GITHUB_ENV

      - name: Setup Google Cloud Credentials
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}
          export_default_credentials: true

      - name: Set Project for Google Cloud HOPR Association
        run: gcloud config set project ${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}

      - name: Update our environment with the RELEASE_ variables (NAME, IP)
        run: GITHUB_REF=${{ github.ref }} bash scripts/cd/release_env.sh >> $GITHUB_ENV
          
      - name: Update our environment with the GCLOUD_ variables (UPDATE_CONTAINER, CREATE_CONTAINER)
        run: RELEASE_NAME=${{ env.RELEASE_NAME }} bash scripts/cd/gcloud_env.sh >> $GITHUB_ENV
        
      - name: Verify environment variables
        run: |
          echo "Release Version: ${{ env.RELEASE_VERSION }}" &&
          echo "Release IP: ${{ env.RELEASE_IP }}" &&
          echo "Release Name: ${{ env.RELEASE_NAME }}" &&
          echo "Gcloud Action: ${{ env.GCLOUD_ACTION_CONTAINER }}" &&
          echo "Gcloud VM name: ${{ env.GCLOUD_VM_NAME }}"
          
      - name: Update bootstrap node with a new container image
        if: env.GCLOUD_ACTION_CONTAINER == 'update'
        run: |
          gcloud compute instances update-container ${{ env.GCLOUD_VM_NAME }} \
            --zone=europe-west6-a \
            --container-image=gcr.io/hoprassociation/hoprd:${{ env.RELEASE_VERSION }} \
            --container-mount-disk name=bs-${{ env.RELEASE_NAME }},mount-path="/app/db"

      - name: Create new bootstrap node with a given IP for a specific release
        if: env.GCLOUD_ACTION_CONTAINER == 'create'
        run: |
          gcloud compute instances create-with-container ${{ env.GCLOUD_VM_NAME }} \
            --zone=europe-west6-a \
            --machine-type=e2-medium \
            --network-interface=address=${{ env.RELEASE_IP }},network-tier=PREMIUM,subnet=default \
            --metadata=google-logging-enabled=true --maintenance-policy=MIGRATE \
            --create-disk name=bs-${{ env.RELEASE_NAME }},size=10GB,type=pd-ssd,mode=rw \
            --container-mount-disk mount-path="/app/db" \
            --tags=hopr-node,web-client,portainer \
            --boot-disk-size=10GB --boot-disk-type=pd-standard \
            --container-env=^,@^DEBUG=hopr\*,@NODE_OPTIONS=--max-old-space-size=4096 \
            --container-image=gcr.io/hoprassociation/hoprd:${{ env.RELEASE_VERSION }} \
            --container-arg="--password" --container-arg="${{ secrets.BS_PASSWORD }}" \
            --container-arg="--env" --container-arg="matic" \
            --container-arg="--init" --container-arg="true" \
            --container-arg="--bootstrap" --container-arg="true" \
            --container-arg="--admin" \
            --container-restart-policy=always

      - name: Store disk name in our environment for further usage
        run: echo "GCLOUD_VM_DISK=/mnt/disks/gce-containers-mounts/gce-persistent-disks/bs-${{ env.RELEASE_NAME }}" >> $GITHUB_ENV

      - name: Stop bootstrap node to get the address from the database
        run: |
          gcloud compute ssh --zone=europe-west6-a ${{ env.GCLOUD_VM_NAME }} \
          -- 'export DOCKER_IMAGE=gcr.io/hoprassociation/hoprd:${{ env.RELEASE_VERSION }} && docker stop $(docker ps -q --filter "ancestor=$DOCKER_IMAGE")'

      - name: Get address from bootstrap docker container and write it into server
        run: |
          gcloud compute ssh --zone=europe-west6-a ${{ env.GCLOUD_VM_NAME }} \
          -- "docker run -v $HOME:/root/tmp -v ${{ env.GCLOUD_VM_DISK }}:/app/db -it node:erbium-buster sh -c 'npm install --unsafe-perm=true -g @hoprnet/hoprd@v${{ env.RELEASE_VERSION }} && hoprd --data=\"/app/db/ethereum/testnet/bootstrap\" --password=\"${{ secrets.BS_PASSWORD }}\" --runAsBootstrap --run \"myAddress native\" > /root/tmp/address.txt'"

      - name: Get address from server and store it as an env variable
        run: |
          echo "BOOTSTRAP_ADDRESS=$(gcloud compute ssh --zone=europe-west6-a ${{ env.GCLOUD_VM_NAME }} -- cat address.txt)" >> $GITHUB_ENV

      - name: Verify bootstrap server address from previous step
        run: |
          echo "Bootstrap Server Address: ${{ env.BOOTSTRAP_ADDRESS }}"
