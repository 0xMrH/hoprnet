name: 'Debug'

on:
  push:
    branches:
      - debug/**


jobs:
  debug:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        environment: ['release'] # Skipping master to avoid dropping master bs node
        include:
        # NB: Ips are currently created on our console panel, please check w/IT for any issues.
          - environment: release
            github_ref: refs/heads/release/debug
    steps:
      - uses: actions/checkout@v2
      - name: Get version from package.json
        run: echo "RELEASE=$(node -p -e "require('./packages/hoprd/package.json').version")" >> $GITHUB_ENV 
      - name: Setup Google Cloud Credentials
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}
          export_default_credentials: true
      - name: Set Project for Google Cloud HOPR Association
        working-directory: packages/hoprd
        run: gcloud config set project ${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}
      - name: Detect which IP we should be using (to replace for a better strategy)
        run: |
          if [ '${{ matrix.github_ref }}' == 'refs/heads/master' ]; then
            echo "RELEASE_NAME=master" >> $GITHUB_ENV &&
            echo "IP_ADDRESS=34.65.102.152" >> $GITHUB_ENV
          else
            echo "RELEASE_NAME=$(echo "${{ matrix.github_ref }}" | sed -e "s#refs/heads/release/##g")" >> $GITHUB_ENV &&
            echo "IP_ADDRESS=34.65.5.42" >> $GITHUB_ENV
          fi
      - name: Detect whether we have created already the server
        run: |
          if [[ $(gcloud compute instances list | grep hopr-bootstrap-${{ env.RELEASE_NAME }}) ]]; then
            echo "GCLOUD_UPDATE_CONTAINER=true" >> $GITHUB_ENV
          else
            echo "GCLOUD_CREATE_CONTAINER=true" >> $GITHUB_ENV
          fi
      - name: Verify environment variables
        run: |
          echo "Release: ${{ env.RELEASE }}" &&
          echo "Updating? ${{ env.GCLOUD_UPDATE_CONTAINER }}" &&
          echo "IP Address ${{ env.IP_ADDRESS }}" &&
          echo "Release Name: ${{ env.RELEASE_NAME }}"
      - name: Update bootstrap node with a new container image
        if: env.GCLOUD_UPDATE_CONTAINER
        run: |
          gcloud compute instances update-container hopr-bootstrap-${{ env.RELEASE_NAME }} \
            --zone=europe-west6-a \
            --container-image=gcr.io/hoprassociation/hoprd:${{ env.RELEASE }} \
            --container-mount-disk name=bs-${{ env.RELEASE_NAME }},mount-path="/app/db"
      - name: Create new bootstrap node with a given IP for a specific release
        if: env.GCLOUD_CREATE_CONTAINER
        run: |
          gcloud compute instances create-with-container hopr-bootstrap-${{ env.RELEASE_NAME }} \
            --zone=europe-west6-a \
            --machine-type=e2-medium \
            --network-interface=address=${{ env.IP_ADDRESS }},network-tier=PREMIUM,subnet=default \
            --metadata=google-logging-enabled=true --maintenance-policy=MIGRATE \
            --create-disk name=bs-${{ env.RELEASE_NAME }},size=10GB,type=pd-ssd,mode=rw \
            --container-mount-disk mount-path="/app/db" \
            --tags=hopr-node,web-client,portainer \
            --boot-disk-size=10GB --boot-disk-type=pd-standard \
            --container-env=^,@^DEBUG=hopr\*,@NODE_OPTIONS=--max-old-space-size=4096 \
            --container-image=gcr.io/hoprassociation/hoprd:${{ env.RELEASE }} \
            --container-arg="--password" --container-arg="${{ secrets.BS_PASSWORD }}" \
            --container-arg="--env" --container-arg="matic" \
            --container-arg="--init" --container-arg="true" \
            --container-arg="--bootstrap" --container-arg="true" \
            --container-arg="--admin" \
            --container-restart-policy=always
